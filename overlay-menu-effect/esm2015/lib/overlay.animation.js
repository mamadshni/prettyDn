/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { trigger, state, style, transition, animate, query, stagger, group } from '@angular/animations';
/**
 * @param {?=} duration
 * @return {?}
 */
export function overlayTextAnimation(duration = 400) {
    return trigger('overlayTextAnimation', [
        state('in', style({ opacity: 1, transform: 'translateY(0px)' })),
        state('out', style({ opacity: 0, transform: 'translateY(200px)' })),
        state('void', style({ opacity: 0, transform: 'translateY(200px)' })),
        transition('* => in', [
            animate(`${duration}ms 450ms cubic-bezier(.22,.68,.43,1.01)`)
        ]),
        transition('in => out', [
            animate(`${duration - 100}ms 100ms cubic-bezier(.56,.07,.78,.57)`, style({ opacity: 0, transform: 'translateY(-150px)' }))
        ])
    ]);
}
/**
 * @return {?}
 */
export function overlayMenuAnimation() {
    return trigger('overlayMenuAnimation', [
        state('true', style({ zIndex: 90 })),
        state('*', style({ zIndex: 0 })),
        transition('false => true', [
            animate('0s 0s', style({ zIndex: 90 })),
            query('[listItems]', style({ opacity: 0, transform: 'translateY(70px)' })),
            query('[overlayMenuShadow]', style({ opacity: 0 })),
            group([
                query('[listItems]', stagger('100ms', [
                    animate('0.3s 300ms cubic-bezier(.22,.68,.43,1.01)', style({ opacity: 1, transform: 'translateY(0px)' }))
                ])),
                query('[overlayMenuShadow]', animate('0.3s 200ms cubic-bezier(.22,.68,.43,1.01)', style({ opacity: 0.6 })))
            ])
        ]),
        transition('true => false', [
            query('[listItems]', style({ opacity: 1 })),
            query('[overlayMenuShadow]', style({ opacity: 0.6 })),
            group([
                query('[listItems]', stagger('50ms', [
                    animate('0.25s 50ms cubic-bezier(.56,.07,.78,.57)', style({ opacity: 0, transform: 'translateY(-80px)' }))
                ])),
                query('[overlayMenuShadow]', animate('0.3s 300ms cubic-bezier(.22,.68,.43,1.01)', style({ opacity: 0 })))
            ])
        ])
    ]);
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoib3ZlcmxheS5hbmltYXRpb24uanMiLCJzb3VyY2VSb290Ijoibmc6Ly9vdmVybGF5LW1lbnUtZWZmZWN0LyIsInNvdXJjZXMiOlsibGliL292ZXJsYXkuYW5pbWF0aW9uLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQ0wsT0FBTyxFQUNQLEtBQUssRUFDTCxLQUFLLEVBQ0wsVUFBVSxFQUNWLE9BQU8sRUFDUCxLQUFLLEVBQ0wsT0FBTyxFQUNQLEtBQUssRUFDTixNQUFNLHFCQUFxQixDQUFDOzs7OztBQUU3QixNQUFNLFVBQVUsb0JBQW9CLENBQUMsUUFBUSxHQUFHLEdBQUc7SUFDakQsT0FBTyxPQUFPLENBQUMsc0JBQXNCLEVBQUU7UUFDckMsS0FBSyxDQUFDLElBQUksRUFBRSxLQUFLLENBQUMsRUFBRSxPQUFPLEVBQUUsQ0FBQyxFQUFFLFNBQVMsRUFBRSxpQkFBaUIsRUFBRSxDQUFDLENBQUM7UUFDaEUsS0FBSyxDQUFDLEtBQUssRUFBRSxLQUFLLENBQUMsRUFBRSxPQUFPLEVBQUUsQ0FBQyxFQUFFLFNBQVMsRUFBRSxtQkFBbUIsRUFBRSxDQUFDLENBQUM7UUFDbkUsS0FBSyxDQUFDLE1BQU0sRUFBRSxLQUFLLENBQUMsRUFBRSxPQUFPLEVBQUUsQ0FBQyxFQUFFLFNBQVMsRUFBRSxtQkFBbUIsRUFBRSxDQUFDLENBQUM7UUFFcEUsVUFBVSxDQUFDLFNBQVMsRUFBRTtZQUNwQixPQUFPLENBQUMsR0FBRyxRQUFRLHlDQUF5QyxDQUFDO1NBQzlELENBQUM7UUFFRixVQUFVLENBQUMsV0FBVyxFQUFFO1lBQ3RCLE9BQU8sQ0FDTCxHQUFHLFFBQVEsR0FBRyxHQUFHLHdDQUF3QyxFQUN6RCxLQUFLLENBQUMsRUFBRSxPQUFPLEVBQUUsQ0FBQyxFQUFFLFNBQVMsRUFBRSxvQkFBb0IsRUFBRSxDQUFDLENBQ3ZEO1NBQ0YsQ0FBQztLQUNILENBQUMsQ0FBQztBQUNMLENBQUM7Ozs7QUFFRCxNQUFNLFVBQVUsb0JBQW9CO0lBQ2xDLE9BQU8sT0FBTyxDQUFDLHNCQUFzQixFQUFFO1FBQ3JDLEtBQUssQ0FBQyxNQUFNLEVBQUUsS0FBSyxDQUFDLEVBQUUsTUFBTSxFQUFFLEVBQUUsRUFBRSxDQUFDLENBQUM7UUFDcEMsS0FBSyxDQUFDLEdBQUcsRUFBRSxLQUFLLENBQUMsRUFBRSxNQUFNLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQztRQUVoQyxVQUFVLENBQUMsZUFBZSxFQUFFO1lBQzFCLE9BQU8sQ0FBQyxPQUFPLEVBQUUsS0FBSyxDQUFDLEVBQUUsTUFBTSxFQUFFLEVBQUUsRUFBRSxDQUFDLENBQUM7WUFFdkMsS0FBSyxDQUNILGFBQWEsRUFDYixLQUFLLENBQUMsRUFBRSxPQUFPLEVBQUUsQ0FBQyxFQUFFLFNBQVMsRUFBRSxrQkFBa0IsRUFBRSxDQUFDLENBQ3JEO1lBRUQsS0FBSyxDQUFDLHFCQUFxQixFQUFFLEtBQUssQ0FBQyxFQUFFLE9BQU8sRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDO1lBRW5ELEtBQUssQ0FBQztnQkFDSixLQUFLLENBQ0gsYUFBYSxFQUNiLE9BQU8sQ0FBQyxPQUFPLEVBQUU7b0JBQ2YsT0FBTyxDQUNMLDJDQUEyQyxFQUMzQyxLQUFLLENBQUMsRUFBRSxPQUFPLEVBQUUsQ0FBQyxFQUFFLFNBQVMsRUFBRSxpQkFBaUIsRUFBRSxDQUFDLENBQ3BEO2lCQUNGLENBQUMsQ0FDSDtnQkFFRCxLQUFLLENBQ0gscUJBQXFCLEVBQ3JCLE9BQU8sQ0FDTCwyQ0FBMkMsRUFDM0MsS0FBSyxDQUFDLEVBQUUsT0FBTyxFQUFFLEdBQUcsRUFBRSxDQUFDLENBQ3hCLENBQ0Y7YUFDRixDQUFDO1NBQ0gsQ0FBQztRQUVGLFVBQVUsQ0FBQyxlQUFlLEVBQUU7WUFDMUIsS0FBSyxDQUFDLGFBQWEsRUFBRSxLQUFLLENBQUMsRUFBRSxPQUFPLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQztZQUMzQyxLQUFLLENBQUMscUJBQXFCLEVBQUUsS0FBSyxDQUFDLEVBQUUsT0FBTyxFQUFFLEdBQUcsRUFBRSxDQUFDLENBQUM7WUFDckQsS0FBSyxDQUFDO2dCQUNKLEtBQUssQ0FDSCxhQUFhLEVBQ2IsT0FBTyxDQUFDLE1BQU0sRUFBRTtvQkFDZCxPQUFPLENBQ0wsMENBQTBDLEVBQzFDLEtBQUssQ0FBQyxFQUFFLE9BQU8sRUFBRSxDQUFDLEVBQUUsU0FBUyxFQUFFLG1CQUFtQixFQUFFLENBQUMsQ0FDdEQ7aUJBQ0YsQ0FBQyxDQUNIO2dCQUNELEtBQUssQ0FDSCxxQkFBcUIsRUFDckIsT0FBTyxDQUNMLDJDQUEyQyxFQUMzQyxLQUFLLENBQUMsRUFBRSxPQUFPLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FDdEIsQ0FDRjthQUNGLENBQUM7U0FDSCxDQUFDO0tBQ0gsQ0FBQyxDQUFDO0FBQ0wsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XHJcbiAgdHJpZ2dlcixcclxuICBzdGF0ZSxcclxuICBzdHlsZSxcclxuICB0cmFuc2l0aW9uLFxyXG4gIGFuaW1hdGUsXHJcbiAgcXVlcnksXHJcbiAgc3RhZ2dlcixcclxuICBncm91cFxyXG59IGZyb20gJ0Bhbmd1bGFyL2FuaW1hdGlvbnMnO1xyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIG92ZXJsYXlUZXh0QW5pbWF0aW9uKGR1cmF0aW9uID0gNDAwKSB7XHJcbiAgcmV0dXJuIHRyaWdnZXIoJ292ZXJsYXlUZXh0QW5pbWF0aW9uJywgW1xyXG4gICAgc3RhdGUoJ2luJywgc3R5bGUoeyBvcGFjaXR5OiAxLCB0cmFuc2Zvcm06ICd0cmFuc2xhdGVZKDBweCknIH0pKSxcclxuICAgIHN0YXRlKCdvdXQnLCBzdHlsZSh7IG9wYWNpdHk6IDAsIHRyYW5zZm9ybTogJ3RyYW5zbGF0ZVkoMjAwcHgpJyB9KSksXHJcbiAgICBzdGF0ZSgndm9pZCcsIHN0eWxlKHsgb3BhY2l0eTogMCwgdHJhbnNmb3JtOiAndHJhbnNsYXRlWSgyMDBweCknIH0pKSxcclxuXHJcbiAgICB0cmFuc2l0aW9uKCcqID0+IGluJywgW1xyXG4gICAgICBhbmltYXRlKGAke2R1cmF0aW9ufW1zIDQ1MG1zIGN1YmljLWJlemllciguMjIsLjY4LC40MywxLjAxKWApXHJcbiAgICBdKSxcclxuXHJcbiAgICB0cmFuc2l0aW9uKCdpbiA9PiBvdXQnLCBbXHJcbiAgICAgIGFuaW1hdGUoXHJcbiAgICAgICAgYCR7ZHVyYXRpb24gLSAxMDB9bXMgMTAwbXMgY3ViaWMtYmV6aWVyKC41NiwuMDcsLjc4LC41NylgLFxyXG4gICAgICAgIHN0eWxlKHsgb3BhY2l0eTogMCwgdHJhbnNmb3JtOiAndHJhbnNsYXRlWSgtMTUwcHgpJyB9KVxyXG4gICAgICApXHJcbiAgICBdKVxyXG4gIF0pO1xyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gb3ZlcmxheU1lbnVBbmltYXRpb24oKSB7XHJcbiAgcmV0dXJuIHRyaWdnZXIoJ292ZXJsYXlNZW51QW5pbWF0aW9uJywgW1xyXG4gICAgc3RhdGUoJ3RydWUnLCBzdHlsZSh7IHpJbmRleDogOTAgfSkpLFxyXG4gICAgc3RhdGUoJyonLCBzdHlsZSh7IHpJbmRleDogMCB9KSksXHJcblxyXG4gICAgdHJhbnNpdGlvbignZmFsc2UgPT4gdHJ1ZScsIFtcclxuICAgICAgYW5pbWF0ZSgnMHMgMHMnLCBzdHlsZSh7IHpJbmRleDogOTAgfSkpLFxyXG5cclxuICAgICAgcXVlcnkoXHJcbiAgICAgICAgJ1tsaXN0SXRlbXNdJyxcclxuICAgICAgICBzdHlsZSh7IG9wYWNpdHk6IDAsIHRyYW5zZm9ybTogJ3RyYW5zbGF0ZVkoNzBweCknIH0pXHJcbiAgICAgICksXHJcblxyXG4gICAgICBxdWVyeSgnW292ZXJsYXlNZW51U2hhZG93XScsIHN0eWxlKHsgb3BhY2l0eTogMCB9KSksXHJcblxyXG4gICAgICBncm91cChbXHJcbiAgICAgICAgcXVlcnkoXHJcbiAgICAgICAgICAnW2xpc3RJdGVtc10nLFxyXG4gICAgICAgICAgc3RhZ2dlcignMTAwbXMnLCBbXHJcbiAgICAgICAgICAgIGFuaW1hdGUoXHJcbiAgICAgICAgICAgICAgJzAuM3MgMzAwbXMgY3ViaWMtYmV6aWVyKC4yMiwuNjgsLjQzLDEuMDEpJyxcclxuICAgICAgICAgICAgICBzdHlsZSh7IG9wYWNpdHk6IDEsIHRyYW5zZm9ybTogJ3RyYW5zbGF0ZVkoMHB4KScgfSlcclxuICAgICAgICAgICAgKVxyXG4gICAgICAgICAgXSlcclxuICAgICAgICApLFxyXG5cclxuICAgICAgICBxdWVyeShcclxuICAgICAgICAgICdbb3ZlcmxheU1lbnVTaGFkb3ddJyxcclxuICAgICAgICAgIGFuaW1hdGUoXHJcbiAgICAgICAgICAgICcwLjNzIDIwMG1zIGN1YmljLWJlemllciguMjIsLjY4LC40MywxLjAxKScsXHJcbiAgICAgICAgICAgIHN0eWxlKHsgb3BhY2l0eTogMC42IH0pXHJcbiAgICAgICAgICApXHJcbiAgICAgICAgKVxyXG4gICAgICBdKVxyXG4gICAgXSksXHJcblxyXG4gICAgdHJhbnNpdGlvbigndHJ1ZSA9PiBmYWxzZScsIFtcclxuICAgICAgcXVlcnkoJ1tsaXN0SXRlbXNdJywgc3R5bGUoeyBvcGFjaXR5OiAxIH0pKSxcclxuICAgICAgcXVlcnkoJ1tvdmVybGF5TWVudVNoYWRvd10nLCBzdHlsZSh7IG9wYWNpdHk6IDAuNiB9KSksXHJcbiAgICAgIGdyb3VwKFtcclxuICAgICAgICBxdWVyeShcclxuICAgICAgICAgICdbbGlzdEl0ZW1zXScsXHJcbiAgICAgICAgICBzdGFnZ2VyKCc1MG1zJywgW1xyXG4gICAgICAgICAgICBhbmltYXRlKFxyXG4gICAgICAgICAgICAgICcwLjI1cyA1MG1zIGN1YmljLWJlemllciguNTYsLjA3LC43OCwuNTcpJyxcclxuICAgICAgICAgICAgICBzdHlsZSh7IG9wYWNpdHk6IDAsIHRyYW5zZm9ybTogJ3RyYW5zbGF0ZVkoLTgwcHgpJyB9KVxyXG4gICAgICAgICAgICApXHJcbiAgICAgICAgICBdKVxyXG4gICAgICAgICksXHJcbiAgICAgICAgcXVlcnkoXHJcbiAgICAgICAgICAnW292ZXJsYXlNZW51U2hhZG93XScsXHJcbiAgICAgICAgICBhbmltYXRlKFxyXG4gICAgICAgICAgICAnMC4zcyAzMDBtcyBjdWJpYy1iZXppZXIoLjIyLC42OCwuNDMsMS4wMSknLFxyXG4gICAgICAgICAgICBzdHlsZSh7IG9wYWNpdHk6IDAgfSlcclxuICAgICAgICAgIClcclxuICAgICAgICApXHJcbiAgICAgIF0pXHJcbiAgICBdKVxyXG4gIF0pO1xyXG59XHJcbiJdfQ==