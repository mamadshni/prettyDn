/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { trigger, state, style, transition, animate, query, stagger, group } from '@angular/animations';
/**
 * @param {?=} duration
 * @return {?}
 */
export function overlayTextAnimation(duration) {
    if (duration === void 0) { duration = 400; }
    return trigger('overlayTextAnimation', [
        state('in', style({ opacity: 1, transform: 'translateY(0px)' })),
        state('out', style({ opacity: 0, transform: 'translateY(200px)' })),
        state('void', style({ opacity: 0, transform: 'translateY(200px)' })),
        transition('* => in', [
            animate(duration + "ms 450ms cubic-bezier(.22,.68,.43,1.01)")
        ]),
        transition('in => out', [
            animate(duration - 100 + "ms 100ms cubic-bezier(.56,.07,.78,.57)", style({ opacity: 0, transform: 'translateY(-150px)' }))
        ])
    ]);
}
/**
 * @return {?}
 */
export function overlayMenuAnimation() {
    return trigger('overlayMenuAnimation', [
        state('true', style({ zIndex: 90 })),
        state('*', style({ zIndex: 0 })),
        transition('false => true', [
            animate('0s 0s', style({ zIndex: 90 })),
            query('[listItems]', style({ opacity: 0, transform: 'translateY(70px)' })),
            query('[overlayMenuShadow]', style({ opacity: 0 })),
            group([
                query('[listItems]', stagger('100ms', [
                    animate('0.3s 300ms cubic-bezier(.22,.68,.43,1.01)', style({ opacity: 1, transform: 'translateY(0px)' }))
                ])),
                query('[overlayMenuShadow]', animate('0.3s 200ms cubic-bezier(.22,.68,.43,1.01)', style({ opacity: 0.6 })))
            ])
        ]),
        transition('true => false', [
            query('[listItems]', style({ opacity: 1 })),
            query('[overlayMenuShadow]', style({ opacity: 0.6 })),
            group([
                query('[listItems]', stagger('50ms', [
                    animate('0.25s 50ms cubic-bezier(.56,.07,.78,.57)', style({ opacity: 0, transform: 'translateY(-80px)' }))
                ])),
                query('[overlayMenuShadow]', animate('0.3s 300ms cubic-bezier(.22,.68,.43,1.01)', style({ opacity: 0 })))
            ])
        ])
    ]);
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoib3ZlcmxheS5hbmltYXRpb24uanMiLCJzb3VyY2VSb290Ijoibmc6Ly9vdmVybGF5LW1lbnUtZWZmZWN0LyIsInNvdXJjZXMiOlsibGliL292ZXJsYXkuYW5pbWF0aW9uLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQ0wsT0FBTyxFQUNQLEtBQUssRUFDTCxLQUFLLEVBQ0wsVUFBVSxFQUNWLE9BQU8sRUFDUCxLQUFLLEVBQ0wsT0FBTyxFQUNQLEtBQUssRUFDTixNQUFNLHFCQUFxQixDQUFDOzs7OztBQUU3QixNQUFNLFVBQVUsb0JBQW9CLENBQUMsUUFBYztJQUFkLHlCQUFBLEVBQUEsY0FBYztJQUNqRCxPQUFPLE9BQU8sQ0FBQyxzQkFBc0IsRUFBRTtRQUNyQyxLQUFLLENBQUMsSUFBSSxFQUFFLEtBQUssQ0FBQyxFQUFFLE9BQU8sRUFBRSxDQUFDLEVBQUUsU0FBUyxFQUFFLGlCQUFpQixFQUFFLENBQUMsQ0FBQztRQUNoRSxLQUFLLENBQUMsS0FBSyxFQUFFLEtBQUssQ0FBQyxFQUFFLE9BQU8sRUFBRSxDQUFDLEVBQUUsU0FBUyxFQUFFLG1CQUFtQixFQUFFLENBQUMsQ0FBQztRQUNuRSxLQUFLLENBQUMsTUFBTSxFQUFFLEtBQUssQ0FBQyxFQUFFLE9BQU8sRUFBRSxDQUFDLEVBQUUsU0FBUyxFQUFFLG1CQUFtQixFQUFFLENBQUMsQ0FBQztRQUVwRSxVQUFVLENBQUMsU0FBUyxFQUFFO1lBQ3BCLE9BQU8sQ0FBSSxRQUFRLDRDQUF5QyxDQUFDO1NBQzlELENBQUM7UUFFRixVQUFVLENBQUMsV0FBVyxFQUFFO1lBQ3RCLE9BQU8sQ0FDRixRQUFRLEdBQUcsR0FBRywyQ0FBd0MsRUFDekQsS0FBSyxDQUFDLEVBQUUsT0FBTyxFQUFFLENBQUMsRUFBRSxTQUFTLEVBQUUsb0JBQW9CLEVBQUUsQ0FBQyxDQUN2RDtTQUNGLENBQUM7S0FDSCxDQUFDLENBQUM7QUFDTCxDQUFDOzs7O0FBRUQsTUFBTSxVQUFVLG9CQUFvQjtJQUNsQyxPQUFPLE9BQU8sQ0FBQyxzQkFBc0IsRUFBRTtRQUNyQyxLQUFLLENBQUMsTUFBTSxFQUFFLEtBQUssQ0FBQyxFQUFFLE1BQU0sRUFBRSxFQUFFLEVBQUUsQ0FBQyxDQUFDO1FBQ3BDLEtBQUssQ0FBQyxHQUFHLEVBQUUsS0FBSyxDQUFDLEVBQUUsTUFBTSxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUM7UUFFaEMsVUFBVSxDQUFDLGVBQWUsRUFBRTtZQUMxQixPQUFPLENBQUMsT0FBTyxFQUFFLEtBQUssQ0FBQyxFQUFFLE1BQU0sRUFBRSxFQUFFLEVBQUUsQ0FBQyxDQUFDO1lBRXZDLEtBQUssQ0FDSCxhQUFhLEVBQ2IsS0FBSyxDQUFDLEVBQUUsT0FBTyxFQUFFLENBQUMsRUFBRSxTQUFTLEVBQUUsa0JBQWtCLEVBQUUsQ0FBQyxDQUNyRDtZQUVELEtBQUssQ0FBQyxxQkFBcUIsRUFBRSxLQUFLLENBQUMsRUFBRSxPQUFPLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQztZQUVuRCxLQUFLLENBQUM7Z0JBQ0osS0FBSyxDQUNILGFBQWEsRUFDYixPQUFPLENBQUMsT0FBTyxFQUFFO29CQUNmLE9BQU8sQ0FDTCwyQ0FBMkMsRUFDM0MsS0FBSyxDQUFDLEVBQUUsT0FBTyxFQUFFLENBQUMsRUFBRSxTQUFTLEVBQUUsaUJBQWlCLEVBQUUsQ0FBQyxDQUNwRDtpQkFDRixDQUFDLENBQ0g7Z0JBRUQsS0FBSyxDQUNILHFCQUFxQixFQUNyQixPQUFPLENBQ0wsMkNBQTJDLEVBQzNDLEtBQUssQ0FBQyxFQUFFLE9BQU8sRUFBRSxHQUFHLEVBQUUsQ0FBQyxDQUN4QixDQUNGO2FBQ0YsQ0FBQztTQUNILENBQUM7UUFFRixVQUFVLENBQUMsZUFBZSxFQUFFO1lBQzFCLEtBQUssQ0FBQyxhQUFhLEVBQUUsS0FBSyxDQUFDLEVBQUUsT0FBTyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUM7WUFDM0MsS0FBSyxDQUFDLHFCQUFxQixFQUFFLEtBQUssQ0FBQyxFQUFFLE9BQU8sRUFBRSxHQUFHLEVBQUUsQ0FBQyxDQUFDO1lBQ3JELEtBQUssQ0FBQztnQkFDSixLQUFLLENBQ0gsYUFBYSxFQUNiLE9BQU8sQ0FBQyxNQUFNLEVBQUU7b0JBQ2QsT0FBTyxDQUNMLDBDQUEwQyxFQUMxQyxLQUFLLENBQUMsRUFBRSxPQUFPLEVBQUUsQ0FBQyxFQUFFLFNBQVMsRUFBRSxtQkFBbUIsRUFBRSxDQUFDLENBQ3REO2lCQUNGLENBQUMsQ0FDSDtnQkFDRCxLQUFLLENBQ0gscUJBQXFCLEVBQ3JCLE9BQU8sQ0FDTCwyQ0FBMkMsRUFDM0MsS0FBSyxDQUFDLEVBQUUsT0FBTyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQ3RCLENBQ0Y7YUFDRixDQUFDO1NBQ0gsQ0FBQztLQUNILENBQUMsQ0FBQztBQUNMLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xyXG4gIHRyaWdnZXIsXHJcbiAgc3RhdGUsXHJcbiAgc3R5bGUsXHJcbiAgdHJhbnNpdGlvbixcclxuICBhbmltYXRlLFxyXG4gIHF1ZXJ5LFxyXG4gIHN0YWdnZXIsXHJcbiAgZ3JvdXBcclxufSBmcm9tICdAYW5ndWxhci9hbmltYXRpb25zJztcclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBvdmVybGF5VGV4dEFuaW1hdGlvbihkdXJhdGlvbiA9IDQwMCkge1xyXG4gIHJldHVybiB0cmlnZ2VyKCdvdmVybGF5VGV4dEFuaW1hdGlvbicsIFtcclxuICAgIHN0YXRlKCdpbicsIHN0eWxlKHsgb3BhY2l0eTogMSwgdHJhbnNmb3JtOiAndHJhbnNsYXRlWSgwcHgpJyB9KSksXHJcbiAgICBzdGF0ZSgnb3V0Jywgc3R5bGUoeyBvcGFjaXR5OiAwLCB0cmFuc2Zvcm06ICd0cmFuc2xhdGVZKDIwMHB4KScgfSkpLFxyXG4gICAgc3RhdGUoJ3ZvaWQnLCBzdHlsZSh7IG9wYWNpdHk6IDAsIHRyYW5zZm9ybTogJ3RyYW5zbGF0ZVkoMjAwcHgpJyB9KSksXHJcblxyXG4gICAgdHJhbnNpdGlvbignKiA9PiBpbicsIFtcclxuICAgICAgYW5pbWF0ZShgJHtkdXJhdGlvbn1tcyA0NTBtcyBjdWJpYy1iZXppZXIoLjIyLC42OCwuNDMsMS4wMSlgKVxyXG4gICAgXSksXHJcblxyXG4gICAgdHJhbnNpdGlvbignaW4gPT4gb3V0JywgW1xyXG4gICAgICBhbmltYXRlKFxyXG4gICAgICAgIGAke2R1cmF0aW9uIC0gMTAwfW1zIDEwMG1zIGN1YmljLWJlemllciguNTYsLjA3LC43OCwuNTcpYCxcclxuICAgICAgICBzdHlsZSh7IG9wYWNpdHk6IDAsIHRyYW5zZm9ybTogJ3RyYW5zbGF0ZVkoLTE1MHB4KScgfSlcclxuICAgICAgKVxyXG4gICAgXSlcclxuICBdKTtcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIG92ZXJsYXlNZW51QW5pbWF0aW9uKCkge1xyXG4gIHJldHVybiB0cmlnZ2VyKCdvdmVybGF5TWVudUFuaW1hdGlvbicsIFtcclxuICAgIHN0YXRlKCd0cnVlJywgc3R5bGUoeyB6SW5kZXg6IDkwIH0pKSxcclxuICAgIHN0YXRlKCcqJywgc3R5bGUoeyB6SW5kZXg6IDAgfSkpLFxyXG5cclxuICAgIHRyYW5zaXRpb24oJ2ZhbHNlID0+IHRydWUnLCBbXHJcbiAgICAgIGFuaW1hdGUoJzBzIDBzJywgc3R5bGUoeyB6SW5kZXg6IDkwIH0pKSxcclxuXHJcbiAgICAgIHF1ZXJ5KFxyXG4gICAgICAgICdbbGlzdEl0ZW1zXScsXHJcbiAgICAgICAgc3R5bGUoeyBvcGFjaXR5OiAwLCB0cmFuc2Zvcm06ICd0cmFuc2xhdGVZKDcwcHgpJyB9KVxyXG4gICAgICApLFxyXG5cclxuICAgICAgcXVlcnkoJ1tvdmVybGF5TWVudVNoYWRvd10nLCBzdHlsZSh7IG9wYWNpdHk6IDAgfSkpLFxyXG5cclxuICAgICAgZ3JvdXAoW1xyXG4gICAgICAgIHF1ZXJ5KFxyXG4gICAgICAgICAgJ1tsaXN0SXRlbXNdJyxcclxuICAgICAgICAgIHN0YWdnZXIoJzEwMG1zJywgW1xyXG4gICAgICAgICAgICBhbmltYXRlKFxyXG4gICAgICAgICAgICAgICcwLjNzIDMwMG1zIGN1YmljLWJlemllciguMjIsLjY4LC40MywxLjAxKScsXHJcbiAgICAgICAgICAgICAgc3R5bGUoeyBvcGFjaXR5OiAxLCB0cmFuc2Zvcm06ICd0cmFuc2xhdGVZKDBweCknIH0pXHJcbiAgICAgICAgICAgIClcclxuICAgICAgICAgIF0pXHJcbiAgICAgICAgKSxcclxuXHJcbiAgICAgICAgcXVlcnkoXHJcbiAgICAgICAgICAnW292ZXJsYXlNZW51U2hhZG93XScsXHJcbiAgICAgICAgICBhbmltYXRlKFxyXG4gICAgICAgICAgICAnMC4zcyAyMDBtcyBjdWJpYy1iZXppZXIoLjIyLC42OCwuNDMsMS4wMSknLFxyXG4gICAgICAgICAgICBzdHlsZSh7IG9wYWNpdHk6IDAuNiB9KVxyXG4gICAgICAgICAgKVxyXG4gICAgICAgIClcclxuICAgICAgXSlcclxuICAgIF0pLFxyXG5cclxuICAgIHRyYW5zaXRpb24oJ3RydWUgPT4gZmFsc2UnLCBbXHJcbiAgICAgIHF1ZXJ5KCdbbGlzdEl0ZW1zXScsIHN0eWxlKHsgb3BhY2l0eTogMSB9KSksXHJcbiAgICAgIHF1ZXJ5KCdbb3ZlcmxheU1lbnVTaGFkb3ddJywgc3R5bGUoeyBvcGFjaXR5OiAwLjYgfSkpLFxyXG4gICAgICBncm91cChbXHJcbiAgICAgICAgcXVlcnkoXHJcbiAgICAgICAgICAnW2xpc3RJdGVtc10nLFxyXG4gICAgICAgICAgc3RhZ2dlcignNTBtcycsIFtcclxuICAgICAgICAgICAgYW5pbWF0ZShcclxuICAgICAgICAgICAgICAnMC4yNXMgNTBtcyBjdWJpYy1iZXppZXIoLjU2LC4wNywuNzgsLjU3KScsXHJcbiAgICAgICAgICAgICAgc3R5bGUoeyBvcGFjaXR5OiAwLCB0cmFuc2Zvcm06ICd0cmFuc2xhdGVZKC04MHB4KScgfSlcclxuICAgICAgICAgICAgKVxyXG4gICAgICAgICAgXSlcclxuICAgICAgICApLFxyXG4gICAgICAgIHF1ZXJ5KFxyXG4gICAgICAgICAgJ1tvdmVybGF5TWVudVNoYWRvd10nLFxyXG4gICAgICAgICAgYW5pbWF0ZShcclxuICAgICAgICAgICAgJzAuM3MgMzAwbXMgY3ViaWMtYmV6aWVyKC4yMiwuNjgsLjQzLDEuMDEpJyxcclxuICAgICAgICAgICAgc3R5bGUoeyBvcGFjaXR5OiAwIH0pXHJcbiAgICAgICAgICApXHJcbiAgICAgICAgKVxyXG4gICAgICBdKVxyXG4gICAgXSlcclxuICBdKTtcclxufVxyXG4iXX0=