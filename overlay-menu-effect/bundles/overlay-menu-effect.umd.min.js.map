{"version":3,"sources":["ng://overlay-menu-effect/lib/overlay-menu-effect.service.ts","ng://overlay-menu-effect/lib/directives/overlay-menu.directive.ts","ng://overlay-menu-effect/lib/overlay.animation.ts","ng://overlay-menu-effect/lib/components/overlay-menu-effect/overlay-menu-effect.component.ts","ng://overlay-menu-effect/lib/components/overlay-text-effect/overlay-text-effect.component.ts","ng://overlay-menu-effect/lib/overlay-menu-effect.module.ts"],"names":["OverlayMenuEffectService","Injectable","args","providedIn","this","isMenuOpened","Subject","Directive","selector","TemplateRef","OverlayMenuDirective","tmpRef","overlayTextAnimation","duration","trigger","state","style","opacity","transform","transition","animate","overlayMenuAnimation","zIndex","query","group","stagger","OverlayMenuEffectComponent","Object","defineProperty","prototype","open","isOpen","overlayMenuEffectService","next","ngOnInit","ngOnDestroy","Component","template","changeDetection","ChangeDetectionStrategy","OnPush","encapsulation","ViewEncapsulation","None","animations","host","class","[@overlayMenuAnimation]","Input","ContentChild","OverlayTextEffectComponent","_this","subscription","subscribe","condition","cd","detectChanges","unsubscribe","ChangeDetectorRef","OverlayMenuEffectModule","NgModule","declarations","imports","CommonModule","exports"],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OverlayMenuEffectService {\n  isMenuOpened = new Subject<boolean>();\n\n  constructor() {}\n}\n","// tslint:disable:directive-selector\nimport { Directive, TemplateRef } from '@angular/core';\n\n@Directive({\n  selector: '[overlayMenu]'\n})\nexport class OverlayMenuDirective {\n  constructor(public tmpRef: TemplateRef<OverlayMenuDirective>) {}\n}\n","import {\r\n  trigger,\r\n  state,\r\n  style,\r\n  transition,\r\n  animate,\r\n  query,\r\n  stagger,\r\n  group\r\n} from '@angular/animations';\r\n\r\nexport function overlayTextAnimation(duration = 400) {\r\n  return trigger('overlayTextAnimation', [\r\n    state('in', style({ opacity: 1, transform: 'translateY(0px)' })),\r\n    state('out', style({ opacity: 0, transform: 'translateY(200px)' })),\r\n    state('void', style({ opacity: 0, transform: 'translateY(200px)' })),\r\n\r\n    transition('* => in', [\r\n      animate(`${duration}ms 450ms cubic-bezier(.22,.68,.43,1.01)`)\r\n    ]),\r\n\r\n    transition('in => out', [\r\n      animate(\r\n        `${duration - 100}ms 100ms cubic-bezier(.56,.07,.78,.57)`,\r\n        style({ opacity: 0, transform: 'translateY(-150px)' })\r\n      )\r\n    ])\r\n  ]);\r\n}\r\n\r\nexport function overlayMenuAnimation() {\r\n  return trigger('overlayMenuAnimation', [\r\n    state('true', style({ zIndex: 90 })),\r\n    state('*', style({ zIndex: 0 })),\r\n\r\n    transition('false => true', [\r\n      animate('0s 0s', style({ zIndex: 90 })),\r\n\r\n      query(\r\n        '[listItems]',\r\n        style({ opacity: 0, transform: 'translateY(70px)' })\r\n      ),\r\n\r\n      query('[overlayMenuShadow]', style({ opacity: 0 })),\r\n\r\n      group([\r\n        query(\r\n          '[listItems]',\r\n          stagger('100ms', [\r\n            animate(\r\n              '0.3s 300ms cubic-bezier(.22,.68,.43,1.01)',\r\n              style({ opacity: 1, transform: 'translateY(0px)' })\r\n            )\r\n          ])\r\n        ),\r\n\r\n        query(\r\n          '[overlayMenuShadow]',\r\n          animate(\r\n            '0.3s 200ms cubic-bezier(.22,.68,.43,1.01)',\r\n            style({ opacity: 0.6 })\r\n          )\r\n        )\r\n      ])\r\n    ]),\r\n\r\n    transition('true => false', [\r\n      query('[listItems]', style({ opacity: 1 })),\r\n      query('[overlayMenuShadow]', style({ opacity: 0.6 })),\r\n      group([\r\n        query(\r\n          '[listItems]',\r\n          stagger('50ms', [\r\n            animate(\r\n              '0.25s 50ms cubic-bezier(.56,.07,.78,.57)',\r\n              style({ opacity: 0, transform: 'translateY(-80px)' })\r\n            )\r\n          ])\r\n        ),\r\n        query(\r\n          '[overlayMenuShadow]',\r\n          animate(\r\n            '0.3s 300ms cubic-bezier(.22,.68,.43,1.01)',\r\n            style({ opacity: 0 })\r\n          )\r\n        )\r\n      ])\r\n    ])\r\n  ]);\r\n}\r\n","import { OverlayMenuEffectService } from '../../overlay-menu-effect.service';\nimport { OverlayMenuDirective } from '../../directives/overlay-menu.directive';\nimport {\n  Component,\n  OnInit,\n  ChangeDetectionStrategy,\n  ViewEncapsulation,\n  ContentChild,\n  OnDestroy,\n  Input\n} from '@angular/core';\nimport { overlayMenuAnimation } from '../../overlay.animation';\n// tslint:disable:component-selector\n// tslint:disable:use-host-property-decorator\n// tslint:disable:no-input-rename\n\n@Component({\n  selector: 'overlay-menu-effect',\n  templateUrl: 'overlay-menu-effect.component.html',\n  styleUrls: ['overlay-menu-effect.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  animations: [overlayMenuAnimation()],\n  host: {\n    class: 'overlay-menu__container',\n    '[@overlayMenuAnimation]': 'isOpen'\n  }\n})\nexport class OverlayMenuEffectComponent implements OnInit, OnDestroy {\n  isOpen: boolean;\n  @Input('isOpen') set changeState(open: boolean) {\n    this.isOpen = open;\n    this.overlayMenuEffectService.isMenuOpened.next(open);\n  }\n\n  @ContentChild(OverlayMenuDirective) menuDirective: OverlayMenuDirective;\n\n  constructor(private overlayMenuEffectService: OverlayMenuEffectService) {}\n\n  ngOnInit() {}\n\n  ngOnDestroy() {}\n}\n","import { OverlayMenuEffectService } from './../../overlay-menu-effect.service';\nimport {\n  Component,\n  OnInit,\n  ChangeDetectionStrategy,\n  ViewEncapsulation,\n  OnDestroy,\n  ChangeDetectorRef\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { overlayTextAnimation } from '../../overlay.animation';\n// tslint:disable:component-selector\n\n@Component({\n  selector: 'overlay-text-effect',\n  templateUrl: './overlay-text-effect.component.html',\n  styleUrls: ['./overlay-text-effect.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  animations: [overlayTextAnimation()]\n})\nexport class OverlayTextEffectComponent implements OnInit, OnDestroy {\n  isOpen = false;\n  subscription: Subscription;\n  constructor(\n    private overlayMenuEffectService: OverlayMenuEffectService,\n    private cd: ChangeDetectorRef\n  ) {}\n\n  ngOnInit(): void {\n    this.subscription = this.overlayMenuEffectService.isMenuOpened.subscribe(\n      (condition: boolean) => {\n        this.isOpen = condition;\n        this.cd.detectChanges();\n      }\n    );\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { OverlayMenuDirective } from './directives/overlay-menu.directive';\nimport { NgModule } from '@angular/core';\nimport { OverlayMenuEffectComponent } from './components/overlay-menu-effect/overlay-menu-effect.component';\nimport { OverlayTextEffectComponent } from './components/overlay-text-effect/overlay-text-effect.component';\n\n@NgModule({\n  declarations: [\n    OverlayMenuEffectComponent,\n    OverlayTextEffectComponent,\n    OverlayMenuDirective\n  ],\n  imports: [CommonModule],\n  exports: [\n    OverlayMenuEffectComponent,\n    OverlayTextEffectComponent,\n    OverlayMenuDirective\n  ]\n})\nexport class OverlayMenuEffectModule {}\n"]}