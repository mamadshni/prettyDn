{"version":3,"sources":["ng://mouse-effect/lib/mouse-effect.service.ts","ng://mouse-effect/lib/directives/image-mouse-effect.directive.ts","ng://mouse-effect/lib/components/mouse-move-effect/mouse-move-effect.component.ts","ng://mouse-effect/lib/directives/mouse-rotate-effect.directive.ts","ng://mouse-effect/lib/mouse-effect.module.ts"],"names":["MouseEffectService","Injectable","args","providedIn","ImageMouseEffectDirective","Directive","selector","TemplateRef","tmpRef","this","MouseMoveEffectComponent","prototype","onResize","isMenuOpen","window","innerWidth","addEffect","deleteEffect","ngOnInit","ngOnDestroy","_this","zone","runOutsideAngular","elemRef","nativeElement","addEventListener","bindMouseEvent","TweenLite","to","mouseWrapper","x","y","removeEventListener","mouseMoveFunction","event","posX","pageX","offsetLeft","posY","pageY","offsetTop","mouseX","offsetWidth","mouseY","offsetHeight","mouseXPercent","mouseYPercent","Component","template","encapsulation","ViewEncapsulation","None","animations","host","class","NgZone","ElementRef","ContentChild","ViewChild","HostListener","bind","MouseRotateEffectDirective","addVanilla","vanillaTilt","removeVanilla","VanillaTilt","init","max","perspective","reverse","speed","easing","destroy","MouseEffectModule","NgModule","declarations","imports","CommonModule","exports"],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MouseEffectService {\n\n  constructor() { }\n}\n","import { Directive, TemplateRef } from '@angular/core';\n// tslint:disable:directive-selector\n\n@Directive({\n  selector: '[imageMouseEffect]'\n})\nexport class ImageMouseEffectDirective {\n  constructor(public tmpRef: TemplateRef<ImageMouseEffectDirective>) {}\n}\n","import { Subscription } from 'rxjs';\nimport { ImageMouseEffectDirective } from '../../directives/image-mouse-effect.directive';\nimport {\n  Component,\n  OnInit,\n  ChangeDetectionStrategy,\n  ViewEncapsulation,\n  NgZone,\n  ElementRef,\n  ViewChild,\n  ContentChild,\n  Input,\n  OnDestroy,\n  ChangeDetectorRef,\n  HostListener\n} from '@angular/core';\n// tslint:disable:use-host-property-decorator\n// tslint:disable:no-input-rename\n// tslint:disable:component-selector\nimport { TweenLite } from 'gsap';\n\nconst movementSpeed = 80;\n@Component({\n  selector: 'mouse-move-effect',\n  templateUrl: 'mouse-move-effect.component.html',\n  styleUrls: ['mouse-move-effect.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  animations: [],\n  host: {\n    class: 'mouse-effect__container'\n  }\n})\nexport class MouseMoveEffectComponent implements OnInit, OnDestroy {\n  isMenuOpen = false;\n\n  private bindMouseEvent = this.mouseMoveFunction.bind(this);\n\n  @ContentChild(ImageMouseEffectDirective)\n  imageDirective: ImageMouseEffectDirective;\n\n  @ViewChild('mouseWrapper') mouseWrapper: ElementRef<HTMLDivElement>;\n\n  @HostListener('window:resize') onResize() {\n    if (!this.isMenuOpen) {\n      if (window.innerWidth > 1024) {\n        this.addEffect();\n      } else {\n        this.deleteEffect();\n      }\n    }\n  }\n\n  constructor(private zone: NgZone, private elemRef: ElementRef) {}\n\n  ngOnInit() {\n    this.addEffect();\n  }\n\n  ngOnDestroy() {\n    this.deleteEffect();\n  }\n\n  addEffect() {\n    if (window.innerWidth > 1024) {\n      this.zone.runOutsideAngular(() =>\n        this.elemRef.nativeElement.addEventListener(\n          'mousemove',\n          this.bindMouseEvent\n        )\n      );\n    }\n  }\n\n  deleteEffect() {\n    TweenLite.to(this.mouseWrapper.nativeElement, 0.2, { x: 0, y: 0 });\n    this.zone.runOutsideAngular(() =>\n      this.elemRef.nativeElement.removeEventListener(\n        'mousemove',\n        this.bindMouseEvent\n      )\n    );\n  }\n\n  mouseMoveFunction(event: MouseEvent) {\n    const posX = event.pageX - this.elemRef.nativeElement.offsetLeft;\n    const posY = event.pageY - this.elemRef.nativeElement.offsetTop;\n\n    const mouseX = posX - this.elemRef.nativeElement.offsetWidth / 2;\n    const mouseY = posY - this.elemRef.nativeElement.offsetHeight / 2;\n\n    const mouseXPercent =\n      -(mouseX / this.elemRef.nativeElement.offsetWidth) * movementSpeed;\n    const mouseYPercent =\n      -(mouseY / this.elemRef.nativeElement.offsetHeight) * movementSpeed;\n\n    TweenLite.to(this.mouseWrapper.nativeElement, 1, {\n      x: mouseXPercent,\n      y: mouseYPercent\n    });\n  }\n}\n","import {\n  Directive,\n  ElementRef,\n  HostListener,\n  OnInit,\n  OnDestroy\n} from '@angular/core';\n// tslint:disable:directive-selector\n\nimport 'vanilla-tilt';\ndeclare var VanillaTilt;\n\n@Directive({\n  selector: '[MouseRotateEffect]'\n})\nexport class MouseRotateEffectDirective implements OnInit, OnDestroy {\n  @HostListener('window:resize') onResize() {\n    if (window.innerWidth > 1024) {\n      this.addVanilla();\n    } else {\n      if (this.elemRef.nativeElement.vanillaTilt) {\n        this.removeVanilla();\n      }\n    }\n  }\n\n  constructor(private elemRef: ElementRef) {}\n\n  ngOnInit(): void {\n    if (window.innerWidth > 1024) {\n      this.addVanilla();\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (this.elemRef.nativeElement.vanillaTilt) {\n      this.removeVanilla();\n    }\n  }\n\n  addVanilla(): void {\n    VanillaTilt.init(this.elemRef.nativeElement, {\n      max: 3,\n      perspective: 1000,\n      reverse: true,\n      speed: 400,\n      easing: 'cubic-bezier(.19,.48,.53,.96)'\n    });\n  }\n\n  removeVanilla(): void {\n    this.elemRef.nativeElement.vanillaTilt.destroy();\n  }\n}\n","import { MouseRotateEffectDirective } from './directives/mouse-rotate-effect.directive';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MouseMoveEffectComponent } from './components/mouse-move-effect/mouse-move-effect.component';\nimport { ImageMouseEffectDirective } from './directives/image-mouse-effect.directive';\n\n@NgModule({\n  declarations: [\n    MouseMoveEffectComponent,\n    MouseRotateEffectDirective,\n    ImageMouseEffectDirective\n  ],\n  imports: [CommonModule],\n  exports: [\n    MouseMoveEffectComponent,\n    MouseRotateEffectDirective,\n    ImageMouseEffectDirective\n  ]\n})\nexport class MouseEffectModule {}\n"]}