{"version":3,"sources":["ng://hovering/lib/hovering.service.ts","ng://hovering/lib/module/interfaces.ts","ng://hovering/lib/module/params.ts","ng://hovering/lib/hovering-circle/hovering-circle.component.ts","ng://hovering/lib/directives/hovering-text.directive.ts","ng://hovering/lib/directives/hovering-icon.directive.ts","ng://hovering/lib/hovering.module.ts"],"names":["HoveringService","Injectable","args","providedIn","top-left","left-top","top-right","right-top","bottom-left","left-bottom","bottom-right","right-bottom","top","left","right","bottom","LIB_PREFIX","HoveringCircleComponent","prototype","ngAfterViewInit","this","lineFrom","HoveringLineFrom","renderer","addClass","el","nativeElement","console","error","textPose","HoveringTextPos","Component","selector","template","encapsulation","ViewEncapsulation","None","host","class","ElementRef","Renderer2","decorators","type","Attribute","HoveringTextDirective","Directive","classList","add","HoveringIconDirective","HoveringModule","NgModule","declarations","imports","exports"],"mappings":"2PAAA,IAAAA,uBAECC,EAAAA,WAAUC,KAAA,CAAC,CACVC,WAAY,uJAIZ,SAAAH,YCNAI,WAAA,EACAC,WAAA,EACAC,YAAA,EACAC,YAAA,EACAC,cAAA,EACAC,cAAA,EACAC,eAAA,EACAC,eAAA,OAPA,aAAA,eACA,aAAA,eACA,cAAA,gBACA,cAAA,gBACA,gBAAA,kBACA,gBAAA,kBACA,iBAAA,mBACA,iBAAA,sBAIAC,IAAA,EACAC,KAAA,EACAC,MAAA,EACAC,OAAA,OAHK,KAAL,UACM,MAAN,WACO,OAAP,YACQ,QAAR,SCfF,IAIaC,EAAa,eCU1BC,GAkBEA,EAAAC,UAAAC,gBAAA,WACMC,KAAKC,WACgC,MAAnCC,EAAiBF,KAAKC,UACxBD,KAAKG,SAASC,SAASJ,KAAKK,GAAGC,cAAe,QAAQN,KAAKC,UAE3DM,QAAQC,MACN,6DAKFR,KAAKS,WAC+B,MAAlCC,EAAgBV,KAAKS,UACvBT,KAAKG,SAASC,SAASJ,KAAKK,GAAGC,cAAe,QAAQN,KAAKS,UAE3DF,QAAQC,MACN,sFAlCTG,EAAAA,UAAS7B,KAAA,CAAC,CACT8B,SAAU,kBACVC,SAAA,0oBAEAC,cAAeC,EAAAA,kBAAkBC,KACjCC,KAAM,CACJC,QAAUtB,EAAU,69KAhBtBuB,EAAAA,kBACAC,EAAAA,iBALOlB,EAAgBmB,WAAA,CAAA,CAAAC,KA4BpBC,EAAAA,UAASzC,KAAA,CAAC,iBA5BY4B,EAAeW,WAAA,CAAA,CAAAC,KA6BrCC,EAAAA,UAASzC,KAAA,CAAC,gBAwBfe,GA7BE,SAAAA,EACUQ,EACAF,EAEmBF,EACGQ,GAJtBT,KAAAK,GAAAA,EACAL,KAAAG,SAAAA,EAEmBH,KAAAC,SAAAA,EACGD,KAAAS,SAAAA,ECzBlC,IAAAe,uBAACC,EAAAA,UAAS3C,KAAA,CAAC,CACT8B,SAAU,kFALQO,EAAAA,cAWpBK,GAHE,SAAAA,EAAoBnB,GAAAL,KAAAK,GAAAA,EAClBL,KAAKK,GAAGC,cAAcoB,UAAUC,IAAO/B,EAAU,SCLrD,IAAAgC,uBAACH,EAAAA,UAAS3C,KAAA,CAAC,CACT8B,SAAU,kEALQO,EAAAA,cAWpBS,GAHE,SAAAA,EAAoBvB,GAAAL,KAAAK,GAAAA,EAClBL,KAAKK,GAAGC,cAAcoB,UAAUC,IAAO/B,EAAU,SCTrD,IAAAiC,uBAKCC,EAAAA,SAAQhD,KAAA,CAAC,CACRiD,aAAc,CAAClC,EAAyB+B,EAAuBJ,GAC/DQ,QAAS,GACTC,QAAS,CAACpC,EAAyB+B,EAAuBJ,OAE/BK,GAL7B,SAAAA","sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HoveringService {\n\n  constructor() { }\n}\n","export enum HoveringLineFrom {\r\n  'top-left',\r\n  'left-top',\r\n  'top-right',\r\n  'right-top',\r\n  'bottom-left',\r\n  'left-bottom',\r\n  'bottom-right',\r\n  'right-bottom'\r\n}\r\n\r\nexport enum HoveringTextPos {\r\n  'top',\r\n  'left',\r\n  'right',\r\n  'bottom'\r\n}\r\n","export const PREFIX = 'hovering';\r\n\r\nexport const PREFIX_LINE = `${PREFIX}-line`;\r\nexport const PREFIX_CIRCLE = `${PREFIX}-circle`;\r\nexport const LIB_PREFIX = `lib-${PREFIX}`;\r\n","import { HoveringLineFrom, HoveringTextPos } from './../module/interfaces';\nimport {\n  Component,\n  ViewEncapsulation,\n  ElementRef,\n  Renderer2,\n  Attribute,\n  AfterViewInit\n} from '@angular/core';\nimport { LIB_PREFIX } from '../module/params';\n\n// tslint:disable:component-selector\n// tslint:disable:use-host-property-decorator\n\n@Component({\n  selector: 'hovering-circle',\n  templateUrl: './hovering-circle.component.html',\n  styleUrls: ['./hovering-circle.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  host: {\n    class: `${LIB_PREFIX}-circle`\n  }\n})\nexport class HoveringCircleComponent implements AfterViewInit {\n  constructor(\n    private el: ElementRef,\n    private renderer: Renderer2,\n\n    @Attribute('from') private lineFrom: HoveringLineFrom,\n    @Attribute('textPos') private textPose: HoveringTextPos\n  ) {}\n\n  ngAfterViewInit() {\n    if (this.lineFrom) {\n      if (HoveringLineFrom[this.lineFrom] != null) {\n        this.renderer.addClass(this.el.nativeElement, `line-${this.lineFrom}`);\n      } else {\n        console.error(\n          'Wrong Value For \"From\" Attribute in \"Hovering Component\"'\n        );\n      }\n    }\n\n    if (this.textPose) {\n      if (HoveringTextPos[this.textPose] != null) {\n        this.renderer.addClass(this.el.nativeElement, `text-${this.textPose}`);\n      } else {\n        console.error(\n          'Wrong Value For \"textPose\" Attribute in \"Hovering Component\"'\n        );\n      }\n    }\n  }\n}\n","import { Directive, ElementRef } from '@angular/core';\nimport { LIB_PREFIX } from '../module/params';\n// tslint:disable:directive-selector\n\n@Directive({\n  selector: '[hText] , [h-text] ,h-text , hText'\n})\nexport class HoveringTextDirective {\n  constructor(private el: ElementRef) {\n    this.el.nativeElement.classList.add(`${LIB_PREFIX}-text`);\n  }\n}\n","import { Directive, ElementRef } from '@angular/core';\nimport { LIB_PREFIX } from '../module/params';\n// tslint:disable:directive-selector\n\n@Directive({\n  selector: '[hIcon] , [h-icon]'\n})\nexport class HoveringIconDirective {\n  constructor(private el: ElementRef) {\n    this.el.nativeElement.classList.add(`${LIB_PREFIX}-icon`);\n  }\n}\n","import { HoveringTextDirective } from './directives/hovering-text.directive';\nimport { HoveringIconDirective } from './directives/hovering-icon.directive';\nimport { HoveringCircleComponent } from './hovering-circle/hovering-circle.component';\nimport { NgModule } from '@angular/core';\n\n@NgModule({\n  declarations: [HoveringCircleComponent, HoveringIconDirective, HoveringTextDirective],\n  imports: [],\n  exports: [HoveringCircleComponent, HoveringIconDirective, HoveringTextDirective]\n})\nexport class HoveringModule {}\n"]}